;+
; This defines the class. Put general class-specific comments
; here. Classes should always have a __DEFINE procedure and an init
; function and a cleanup procdure.  All of those should use the hiddin
; tag to compile_opt.  General discussions about the class go here.  I
; can't decide how best to make use of the file_comments tag.
;
; @field stuff This field holds a long integer.
; @field junk This is a pointer to something.
;
; @file_comments
;  These are file comments.  This stuff appears at the top of the
;  documentation. You can't use any other tags here - they get
;  associated with the next routine.  You should be able to embed HTML
;  here.
;
; @inherits parent_class I don't know if you have to explicitly make
; an html link to the parent_class documentation or now.  If so, see
; hdr.pro for an example as to how to do that in HTML.
;
; @version $Id$
;-
PRO MYCLASS__DEFINE
    compile_opt idl2, hidden


    myc = { myclass, $
       stuff:0L, $
       junk:ptr_new() $
    }

END    

;+
; Initialize the object
;-
FUNCTION MYCLASS::init
    compile_opt idl2, hidden

    ; initialize things here

    return, 1

END

;+
; Class cleanup on deletion
;-
PRO MYCLASS::cleanup
    compile_opt idl2, hidden

    if ptr_valid(self.junk) then ptr_free, self.junk

END

;+
; This class can jump.  Function and procedures follow the same
; templates as similar things not in classes except that it isn't
; necessary to add the @version tag.
;
; @param how_high {in}{optional}{type=numeric}{default=10} How high
; should I jump.
;
; @keyword how_long {in}{optinal}{type=numeric}{default=5} How long
; should I keep jumping.
;
; @examples 
;   Put examples here.
;-
PRO MYCLASSR::jump, how_high, how_long=how_long
    compile_opt idl2, hidden

    ; jumping happens here.

END


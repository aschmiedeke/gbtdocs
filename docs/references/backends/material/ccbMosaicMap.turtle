########################################################
#
#  19apr07 ccb mapping SB
#          Uses trajectory in independent fits file
#
#  With default file kaRaster15x2-6sec does a 15'x2' square
#   map in ~5.4 minutes.
#  Repeat this 5 times, with centers spaced by 1'52", to
#   build up a 15'x10' map
#
#  You can also just use standard RALongMap instead of 
#   the single trajectory, though this is 
#   less efficient and may excite more feedarm 
#   vibration.
#
########################################################


# the above sources must be in this
# ASTRID format catalog:
targetcat=Catalog("/users/bmason/ccbPub/example.acat")
# or in the default catalog...
Catalog() 

sourcelist=[
"ldn1622n2",
"ldn1622n1",
"ldn1622",
"ldn1622s1",
"ldn1622s2"]

###############################################
#
# Define custom scan "dotrajectory" 
#  also define the function that reads in a trajectory FITS file,
#  and then use it, to read in some trajectories.
#

import os
import sys

trajdir="/users/bmason/gbt-dev/scanning/ptcsTraj"
if (trajdir not in sys.path):
	sys.path.append(trajdir)
from readFitsTraj import readFitsTraj

#
# Read in the trajectory
#
#trajnod=readFitsTraj("/users/bmason/ccbPub/karaster15x2-6sec.fits",1.0)
trajnod=readFitsTraj("/users/bmason/ccbPub/karaster5x2-6sec.fits",1.0)
DefineScan("dotrajectory", "/users/bmason/gbt-dev/scanning/ptcsTraj/dotrajectory.py")

# set an initial configuration and add the weather data to the archivist
#  if the first source is not a calibrator this also leaves us in a
#  happy state for CCB observations
Configure("/users/bmason/ccbPub/ccb.conf")
execfile("/users/bmason/ccbPub/addwx.py")
execfile("/users/bmason/ccbPub/killlo.py")
execfile("/users/bmason/ccbPub/deselectDeadCcbChans.py")			       

for mysrc in srclist:
   Slew(mySrc)
   dotrajectory(trajnod,location=mySrc, beamName="1", cos_v=True,  coordMode="Encoder")

